{"ast":null,"code":"var _jsxFileName = \"/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\nexport default class Tasklist extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.delete = id => {\n      let stateUpdate = this.state.tasksArray;\n      stateUpdate.forEach(elem => {\n        if (elem.id === id && elem.done === false) {\n          elem.done = true;\n        }\n      });\n      console.log(stateUpdate);\n      this.setState({\n        tasksArray: stateUpdate\n      });\n      stateUpdate = [];\n    };\n\n    this.state = {\n      tasksArray: [{\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      }, {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }, {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tasksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.tasksArray.map(elem => (this.props.cat === \"All\" || this.props.cat === elem.category) && elem.done === false ? React.createElement(Task, {\n      key: elem.id,\n      obj: elem,\n      delete: this.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js"],"names":["React","Component","Fragment","Task","Tasklist","delete","id","stateUpdate","state","tasksArray","forEach","elem","done","console","log","setState","name","owner","priority","category","deadline","Date","render","map","props","cat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC9CI,MAD8C,GACpCC,EAAD,IAAO;AACd,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,UAA7B;AACAF,MAAAA,WAAW,CAACG,OAAZ,CAAoBC,IAAI,IAAG;AACzB,YAAGA,IAAI,CAACL,EAAL,KAAUA,EAAV,IAAgBK,IAAI,CAACC,IAAL,KAAY,KAA/B,EAAqC;AACnCD,UAAAA,IAAI,CAACC,IAAL,GAAU,IAAV;AACD;AAEF,OALD;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,WAAKQ,QAAL,CAAc;AAACN,QAAAA,UAAU,EAACF;AAAZ,OAAd;AACAA,MAAAA,WAAW,GAAC,EAAZ;AACD,KAZ6C;;AAAA,SAa9CC,KAb8C,GAatC;AACNC,MAAAA,UAAU,EAAE,CACV;AACEH,QAAAA,EAAE,EAAE,KADN;AAEEU,QAAAA,IAAI,EAAE,mBAFR;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,QAAQ,EAAE,QAJZ;AAKEC,QAAAA,QAAQ,EAAE,QALZ;AAMEC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAS,cAAT,CANZ;AAOET,QAAAA,IAAI,EAAE;AAPR,OADU,EAUV;AACEN,QAAAA,EAAE,EAAE,KADN;AAEEU,QAAAA,IAAI,EAAE,aAFR;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,QAAQ,EAAE,KAJZ;AAKEC,QAAAA,QAAQ,EAAE,QALZ;AAMEC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAS,cAAT,CANZ;AAOET,QAAAA,IAAI,EAAE;AAPR,OAVU,EAmBV;AACEN,QAAAA,EAAE,EAAE,KADN;AAEEU,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,QAAQ,EAAE,QAJZ;AAKEC,QAAAA,QAAQ,EAAE,QALZ;AAMEC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAS,cAAT,CANZ;AAOET,QAAAA,IAAI,EAAE;AAPR,OAnBU;AADN,KAbsC;AAAA;;AA4C9CU,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWC,UAAX,CAAsBc,GAAtB,CAA0BZ,IAAI,IAC5B,CAAC,KAAKa,KAAL,CAAWC,GAAX,KAAmB,KAAnB,IAA4B,KAAKD,KAAL,CAAWC,GAAX,KAAmBd,IAAI,CAACQ,QAArD,KAAkER,IAAI,CAACC,IAAL,KAAY,KAA/E,GACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAI,CAACL,EAAhB;AAAoB,MAAA,GAAG,EAAEK,IAAzB;AAA+B,MAAA,MAAM,EAAE,KAAKN,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,CADH,CADF;AAWD;;AAxD6C","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\n\nexport default class Tasklist extends Component {\n  delete = (id) =>{\n    let stateUpdate = this.state.tasksArray;\n    stateUpdate.forEach(elem =>{\n      if(elem.id===id && elem.done===false){\n        elem.done=true\n      }\n      \n    })\n    console.log(stateUpdate)\n    this.setState({tasksArray:stateUpdate})\n    stateUpdate=[]\n  }\n  state = {\n    tasksArray: [\n      {\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }\n    ]\n  };\n  render() {\n    return (\n      <div className=\"tasksList\">\n        {this.state.tasksArray.map(elem =>\n          ((this.props.cat === \"All\" || this.props.cat === elem.category)&& (elem.done===false)) ? (\n            <Task key={elem.id} obj={elem} delete={this.delete}/>\n          ) : (\n            <Fragment></Fragment>\n          )\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}