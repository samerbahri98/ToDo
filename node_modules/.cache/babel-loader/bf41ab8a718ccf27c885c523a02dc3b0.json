{"ast":null,"code":"var _jsxFileName = \"/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\nimport Edits from \"./Edits/Edits\";\nexport default class Tasklist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasksArray: [{\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      }, {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }, {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }]\n    };\n\n    this.delete = id => {\n      let stateUpdate = this.state.tasksArray;\n      stateUpdate.forEach(elem => {\n        if (elem.id === id && elem.done === false) {\n          elem.done = true;\n        }\n      });\n      this.setState({\n        tasksArray: stateUpdate\n      });\n    };\n\n    this.deleteAll = () => {\n      let stateUpdate = this.state.tasksArray;\n      stateUpdate.forEach(elem => {\n        if (this.props.cat === elem.category) {\n          elem.done = true;\n        }\n      });\n      this.setState({\n        tasksArray: stateUpdate\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tasksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.tasksArray.map(elem => (this.props.cat === \"All\" || this.props.cat === elem.category) && elem.done === false ? React.createElement(Task, {\n      key: elem.id,\n      obj: elem,\n      delete: this.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Edits, {\n      deleteAll: this.deleteAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js"],"names":["React","Component","Fragment","Task","Edits","Tasklist","state","tasksArray","id","name","owner","priority","category","deadline","Date","done","delete","stateUpdate","forEach","elem","setState","deleteAll","props","cat","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\nimport Edits from \"./Edits/Edits\";\n\nexport default class Tasklist extends Component {\n  state = {\n    tasksArray: [\n      {\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }\n    ]\n  };\n\n  delete = id => {\n    let stateUpdate = this.state.tasksArray;\n    stateUpdate.forEach(elem => {\n      if (elem.id === id && elem.done === false) {\n        elem.done = true;\n      }\n    });\n    this.setState({ tasksArray: stateUpdate });\n  };\n\n  deleteAll= ()=>{\n    let stateUpdate = this.state.tasksArray;\n    stateUpdate.forEach(elem => {\n      if(this.props.cat===elem.category){\n        elem.done=true\n      }\n    })\n    this.setState({ tasksArray: stateUpdate });\n  }\n\n  render() {\n    return (\n      <div className=\"tasksList\">\n        {this.state.tasksArray.map(elem =>\n          (this.props.cat === \"All\" || this.props.cat === elem.category) &&\n          elem.done === false ? (\n            <Task key={elem.id} obj={elem} delete={this.delete} />\n          ) : (\n            <Fragment></Fragment>\n          )\n        )}\n        <Edits deleteAll={this.deleteAll}/>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}