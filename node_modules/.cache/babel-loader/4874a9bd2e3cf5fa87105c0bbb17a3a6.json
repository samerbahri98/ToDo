{"ast":null,"code":"var _jsxFileName = \"/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\nimport Edits from \"./Edits/Edits\";\nimport AddTask from \"./AddTask/AddTask.js\";\nimport AddTask2 from \"./AddTask/AddTask2.js\";\nexport default class Tasklist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasksArray: [{\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      }, {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }, {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }],\n      AddTask: false\n    };\n\n    this.delete = id => {\n      let stateUpdate = this.state.tasksArray;\n      stateUpdate.forEach(elem => {\n        if (elem.id === id && elem.done === false) {\n          elem.done = true;\n        }\n      });\n      this.setState({\n        tasksArray: stateUpdate\n      });\n    };\n\n    this.deleteAll = () => {\n      if (window.confirm(`do you want to delete all the tasks for ${this.props.cat} category?`)) {\n        let stateUpdate = this.state.tasksArray;\n        stateUpdate.forEach(elem => {\n          if (this.props.cat === elem.category || this.props.cat === \"All\") {\n            elem.done = true;\n          }\n        });\n        this.setState({\n          tasksArray: stateUpdate\n        });\n      }\n    };\n\n    this.displayAdd = () => this.setState({\n      AddTask: true\n    });\n\n    this.cancelAdd = () => this.setState({\n      AddTask: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tasksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.tasksArray.map(elem => (this.props.cat === \"All\" || this.props.cat === elem.category) && elem.done === false ? React.createElement(Task, {\n      key: elem.id,\n      obj: elem,\n      delete: this.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      key: elem.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), this.state.AddTask ? React.createElement(AddTask, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Edits, {\n      deleteAll: this.deleteAll,\n      displayAdd: this.displayAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/samer/Projects/Web/todo remake/multitask/src/Components/Tasklist/Tasklist.js"],"names":["React","Component","Fragment","Task","Edits","AddTask","AddTask2","Tasklist","state","tasksArray","id","name","owner","priority","category","deadline","Date","done","delete","stateUpdate","forEach","elem","setState","deleteAll","window","confirm","props","cat","displayAdd","cancelAdd","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Task from \"./Task/Task\";\nimport Edits from \"./Edits/Edits\";\nimport AddTask from \"./AddTask/AddTask.js\"\nimport AddTask2 from \"./AddTask/AddTask2.js\"\n\nexport default class Tasklist extends Component {\n  state = {\n    tasksArray: [\n      {\n        id: \"ta1\",\n        name: \"Calculus homework\",\n        owner: \"samer\",\n        priority: \"Urgent\",\n        category: \"school\",\n        deadline: new Date(\"May 09, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta2\",\n        name: \"buy chicken\",\n        owner: \"samer\",\n        priority: \"Low\",\n        category: \"market\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      },\n      {\n        id: \"ta3\",\n        name: \"E100\",\n        owner: \"samer\",\n        priority: \"Medium\",\n        category: \"school\",\n        deadline: new Date(\"May 10, 2020\"),\n        done: false\n      }\n    ],\n    AddTask: false\n  };\n\n  delete = id => {\n    let stateUpdate = this.state.tasksArray;\n    stateUpdate.forEach(elem => {\n      if (elem.id === id && elem.done === false) {\n        elem.done = true;\n      }\n    });\n    this.setState({ tasksArray: stateUpdate });\n  };\n\n  deleteAll = () => {\n    if (\n      window.confirm(\n        `do you want to delete all the tasks for ${this.props.cat} category?`\n      )\n    ) {\n      let stateUpdate = this.state.tasksArray;\n      stateUpdate.forEach(elem => {\n        if (this.props.cat === elem.category || this.props.cat === \"All\") {\n          elem.done = true;\n        }\n      });\n      this.setState({ tasksArray: stateUpdate });\n    }\n  };\n\n  displayAdd= () => this.setState({AddTask: true})\n  cancelAdd= () => this.setState({AddTask: false})\n\n  render() {\n    return (\n      <div className=\"tasksList\">\n        {this.state.tasksArray.map(elem =>\n          (this.props.cat === \"All\" || this.props.cat === elem.category) &&\n          elem.done === false ? (\n            <Task key={elem.id} obj={elem} delete={this.delete} />\n          ) : (\n            <Fragment key={elem.id}></Fragment>\n          )\n        )}\n        {this.state.AddTask\n        ?(<AddTask />)\n        :(<Fragment />)\n        }\n        <Edits deleteAll={this.deleteAll} displayAdd={this.displayAdd}/>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}